---
# регистрация имени модуля для использовании в названии файлов
- name: "register module_name"
  set_fact: module_name="{{ mbqueue.dirs.module }}"

# дублируем часть конфига в переменную для облегчения переноса в другие модули
- name: "register configuration"
  set_fact: configuration="{{ mbqueue.software.database }}"

# создание переменных для удобства
- name: "register mysql_user"
  set_fact: mysql_user="{{ configuration.mysql_user }}"

- name: "register mysql_role"
  set_fact: mysql_role="{{ configuration.mysql_role }}"

- name: "register custom_pass"
  set_fact: custom_pass="{{ configuration.mysql_pass }}"

- name: "register client_ip"
  set_fact: client_ip="{{ configuration.client_ip }}"

- name: "register client_ip"
  set_fact: client_ip="{{ ansible_default_ipv4.address }}"
  when: configuration.use_ansible_default_ipv4

- name: "register client_ip"
  set_fact: client_ip="127.0.0.1"
  when: billing.mysql_server == "127.0.0.1" or billing.mysql_server == "localhost"

# Начало
- name: "check if username is already exists"
  shell: mysql --defaults-file="{{ billing.mysql_connect }}" -Ne "SELECT EXISTS(SELECT 1 FROM mysql.user WHERE User = '{{ mysql_user }}' and Host = '{{ client_ip }}');"
  register: user_exists

- name: "create {{ mysql_user }} user"
  block:
    - name: "generate password"
      shell: "bash roles/generatepasswd.sh > {{ billing.dirs.tmp }}/{{ module_name }}_password"

    - name: "copy password into variable"
      set_fact:
        user_pass: "{{ lookup('file', '{{ billing.dirs.tmp }}/{{ module_name }}_password') }}"

    - name: "copy password into variable"
      set_fact:
        user_pass: "{{ custom_pass }}"
      when: custom_pass != ""

    - name: "run queue"
      shell: mysql --defaults-file="{{ billing.mysql_connect }}" -e "CREATE USER '{{ mysql_user }}'@'{{ client_ip }}' IDENTIFIED WITH mysql_native_password BY '{{ user_pass }}' REQUIRE NONE;"

    - name: "apply rights"
      shell: mysql --defaults-file="{{ billing.mysql_connect }}" -e "GRANT '{{ mysql_role }}' TO '{{ mysql_user }}'@'{{ client_ip }}';"

    - name: "default role"
      shell: mysql --defaults-file="{{ billing.mysql_connect }}" -e "SET DEFAULT ROLE '{{ mysql_role }}' TO '{{ mysql_user }}'@'{{ client_ip }}';"

    - name: "add to {{ billing.dirs.home }}/database_users.info"
      blockinfile:
        path: "{{ billing.dirs.home }}/database_users.info"
        block: |
          ip={{ client_ip }}
          login={{ mysql_user }}
          password={{ user_pass }}
        marker: "# {mark} {{ module_name }} database info"

    - name: "mark completed"
      file:
        path: "{{ billing.dirs.tmp }}/{{ module_name }}_created"
        state: touch
  when: user_exists.stdout == "0"
